---
import { type CollectionEntry, getCollection } from 'astro:content';

import BaseLayout from '../../layouts/BaseLayout.astro';

import ContactCTA from '../../components/ContactCTA.astro';
import Hero from '../../components/Hero.astro';
import Icon from '../../components/Icon.astro';
import Pill from '../../components/Pill.astro';
import Gallery from '../../components/Gallery.astro';
import CallToAction from '../../components/CallToAction.astro';


interface Props {
	entry: CollectionEntry<'work'>;
}

export async function getStaticPaths() {
	const work = await getCollection('work');
	return work.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}


const { entry } = Astro.props;
const { Content } = await entry.render();

console.log('Rendered Content:', entry.data);

---

<BaseLayout title={entry.data.title} description={entry.data.description}>
	<div class="stack gap-20">
		<div class="stack gap-15">
			<header>
				<div class="wrapper stack gap-2">
					<div class="project-hero">
						<div>
					    	<a class="back-link" href="/work/"><Icon icon="arrow-left" /> Portafolio</a>
					    	<Hero title={entry.data.title} align="start">
					    		<div class="details">
										<p class="description">{entry.data.description}</p>
					    			<div class="tags">
					    				{entry.data.tags.map((t) => <Pill>{t}</Pill>)}
					    			</div>
					    		</div>
					    	</Hero>
					  	</div>
					    {entry.data.img && 
							<img 
								transition:name={`cover-${entry.data.title}`} 
								src={entry.data.img} 
								alt={entry.data.img_alt || ''} 
							/>
						}
					</div>
				</div>
			</header>
			<main class="wrapper">
				<div class="content">
					<Content />
				</div>
				<Gallery images={entry.data.images} />
				{entry.data.video && (
					<div class="vid-c">
						  <div class="video-container">
							<iframe 
								  class="frame"
								  src={entry.data.video}
								  frameborder="0" 
								  allow="autoplay; fullscreen; picture-in-picture" 
								  allowfullscreen
							>
							</iframe>
						  </div>
					</div>
				)}
				<div class="button">
					<CallToAction href="/work/">
						Volver
						<Icon icon="arrow-left" size="1.2em" />
					</CallToAction>
				</div>
			</main>
		</div>
		<ContactCTA />
	</div>
</BaseLayout>

<style>
	header {
		padding-bottom: 2.5rem;
		border-bottom: 1px solid var(--gray-800);
	}

	.project-hero {
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		align-items: center;
		gap: 2.5rem;
	}

	.project-hero img {
    	height: 350px;
		width: 370px;
    	border-radius: 18px;
    	object-fit: cover;
  	}

	.back-link {
		display: block;
	}

	.details {
		display: flex;
		flex-direction: column;
		padding: 0.5rem;
		gap: 1.5rem;
		justify-content: space-between;
		align-items: center;
	}

	.tags {
		display: flex;
		gap: 0.5rem;
	}

	.description {
		font-size: var(--text-lg);
		max-width: 54ch;
	}

	.content {
		margin-inline: auto;
	}

	.content > :global(* + *) {
		margin-top: 1rem;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5) {
		margin: 1.5rem 0;
	}

	.content :global(img) {
		border-radius: 1.5rem;
		box-shadow: var(--shadow-sm);
		background: var(--gradient-subtle);
		border: 1px solid var(--gray-800);
	}

	.content :global(blockquote) {
		font-size: var(--text-lg);
		font-family: var(--font-brand);
		font-weight: 600;
		line-height: 1.1;
		padding-inline-start: 1.5rem;
		border-inline-start: 0.25rem solid var(--accent-dark);
		color: var(--gray-0);
	}

	.content :global(ul) {
		list-style: outside;
		padding: 0 0 0 20px;
	}

	.content :global(li) {
		margin-top: 8px;
	}

	.vid-c {
		display: flex;
		justify-content: center;
		margin: 5rem 0 0;
	}

	.video-container {
		max-width: 500px;
		display: flex;
  		width: 100%;
		padding-bottom: 100%;
		height: 0;
  		position: relative;
  		overflow: hidden;
		border-radius: 20px;
	}

	.frame {
		position: absolute;
  		top: 0;
  		left: 0;
  		width: 100%;
  		height: 100%;
  		border: 0;
	}

	@media (min-width: 560px) {
		.video-container {
			padding-bottom: 500px;
		}
	}

	.back-link,
	.content :global(a) {
		text-decoration: 1px solid underline transparent;
		text-underline-offset: 0.25em;
		transition: text-decoration-color var(--theme-transition);
	}

	.back-link:hover,
	.back-link:focus,
	.content :global(a:hover),
	.content :global(a:focus) {
		text-decoration-color: currentColor;
	}

	.button {
		margin: 80px auto 0;
		max-width: 520px;
	}

	@media (min-width: 53em) {
		.back-link {
			align-self: flex-start;
		}

		.details {
		}

		.content :global(blockquote) {
			font-size: var(--text-2xl);
		}

	  .project-hero {
			flex-direction: row;
		}
	}

	@media (max-width: 540px) {
		.tags {
			display: grid;
			grid-template-columns: repeat(2, 1fr);
		}

		.project-hero img {
			height: 75vw !important;
		}

	}
</style>
