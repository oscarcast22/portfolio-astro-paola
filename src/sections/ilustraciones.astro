<section class="ilustraciones" id="ilustraciones">
    <blockquote>Ilustraciones</blockquote>
    <p class="mt-5"> 
        Además de mi trabajo como Diseñadora gráfica me considero una amante del Arte en todos sus aspectos, mi vida profesional se encaminó hacia el diseño gráfico, sin embargo en todas las oportunidades que puedo mezclo mis dos pasiones.<br>
        Me muevo entre lo tradicional y lo digital y mi trabajo es una mezcla de ambas técnicas.
    </p>
    <div class="grid grid-cols-1 xs:grid-cols-2 gap-4 mt-5 gallery">
        <div class="grid gap-4">
            <div class="il-card rounded-lg">
                <img src="/assets/ilustraciones/ilustracion-1.webp" alt="" class="h-auto max-w-full">
            </div>
            <div class="il-card rounded-lg">
                <img src="/assets/ilustraciones/ilustracion-3.webp" alt="" class="h-auto max-w-full">
            </div>
            <div class="il-card rounded-lg">
                <img src="/assets/ilustraciones/ilustracion-5.webp" alt="" class="h-auto max-w-full">
            </div>
        </div>
        <div class="grid gap-4">
            <div class="il-card rounded-lg">
                <img src="/assets/ilustraciones/ilustracion-2.webp" alt="" class="h-auto max-w-full">
            </div>
            <div class="il-card rounded-lg">
                <img src="/assets/ilustraciones/ilustracion-4.webp" alt="" class="h-auto max-w-full">
            </div>
            <div class="il-card rounded-lg">
                <img src="/assets/ilustraciones/ilustracion-6.webp" alt="" class="h-auto max-w-full">
            </div>
            <div class="il-card rounded-lg">
                <img src="/assets/ilustraciones/ilustracion-7.webp" alt="" class="h-auto max-w-full il-110">
            </div>
        </div>
        </div>
    </div>
</section>
<div class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <img src="" alt="">
      <div class="nav-btns">
        <button class="prev">&#10094;</button>
        <button class="next">&#10095;</button>
      </div>
    </div>
  </div>

<style>
    .ilustraciones blockquote {
        font-size: var(--text-2xl);
		    font-family: var(--font-brand);
		    font-weight: 600;
		    line-height: 1.1;
		    padding-inline-start: 1.5rem;
		    border-inline-start: 0.25rem solid var(--accent-dark);
		    color: var(--gray-0);
	  }

    .gallery {
        max-width: 650px;
        margin: 1.25rem auto;
    }

    .gallery div {
        overflow: hidden;
    }

    .gallery div img {
        height: 100%;
        object-fit: cover;
        cursor: pointer;
        transition: scale .3s ease;
    }

    .gallery div img:hover {
        scale: 1.1;
    }

    .il-110 {
        height: 105% !important;
    }
    
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
        justify-content: center;
        align-items: center;
        overflow: hidden;
        opacity: 0;
        transition: opacity 0.3s ease;
    } 

    .modal.open {
        display: flex;
    }  

    .modal.fade-in {
        opacity: 1;
    }   

    .modal-content {
        margin-top: 40px;
        width: 100%;
        height: 100%;
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
    }   

    .modal img {
        border-radius: 10px;
        object-fit: cover;
        transition: opacity 0.3s ease;
        height: 70vh;
    }   

    .modal img.fade-out {
        opacity: 0;
    } 

    .modal img.fade-in {
        opacity: 1;
    }

    .close {
        align-self: self-end;
        margin: 0 30px 15px 0;
        top: -80px;
        right: 20px;
        width: 45px;
        height: 45px;
        text-align: center;
        border-radius: 50%;
        background-color: rgba(0, 0, 0, 0.281);
        color: white;
        font-size: 30px;
        cursor: pointer;
    }

    .close:hover {
        background-color: rgba(0, 0, 0, 0.8);
    }

    .prev,
    .next {
        top: 50%;
        transform: translateY(-50%);
        color: white;
        font-size: 30px;
        width: 45px;
        height: 45px;
        background-color: rgba(0, 0, 0, 0.281);
        border: none;
        cursor: pointer;
        border-radius: 50%;
    }

    .prev {
        left: 15px;
    }

    .next {
        right: 15px;
    } 

    .prev:hover,
    .next:hover {
        background-color: rgba(0, 0, 0, 0.8);
    }

    .modal-content {
        flex-direction: column;
    }

    .nav-btns {
        margin: 40px 0 0;
        display: flex;
        gap: 30px;
    }

    @media (max-width: 750px) {
        .prev {
          left: 7px;
        } 
        .next {
          right: 7px;
        }
    }

    @media (max-width: 650px) {
        .modal img {
            height: auto;
            width: 95%;
        }

        .prev,
        .next {
            position: static;
            font-size: 20px;
            width: 35px;
            height: 35px;
        }

        .prev {
            left: 7px;
        }

        .next {
            right: 7px;
        }
    }
</style>

<script>
    document.addEventListener('astro:page-load', () => {
      interface ImageInfo {
        src: string;
        img_alt: string;
      }
  
      const imgCards: NodeListOf<HTMLElement> = document.querySelectorAll('.il-card');
      const images: ImageInfo[] = Array.from(imgCards).map(card => {
        const img = card.querySelector('img') as HTMLImageElement;
        return { src: img.src, img_alt: img.alt };
      });
  
      let currentIndex: number = 0;
      const modal: HTMLElement = document.querySelector('.modal') as HTMLElement;
      const modalImg: HTMLImageElement = modal.querySelector('img') as HTMLImageElement;
  
      imgCards.forEach((card, index) => {
        card.addEventListener('click', () => openModal(index));
      });
  
      (document.querySelector('.close') as HTMLElement).addEventListener('click', closeModal);
      (document.querySelector('.prev') as HTMLElement).addEventListener('click', prevImage);
      (document.querySelector('.next') as HTMLElement).addEventListener('click', nextImage);
      modal.addEventListener('click', handleClickOutside);
  
      function openModal(index: number): void {
        currentIndex = index;
        modalImg.src = images[index].src;
        modalImg.alt = images[index].img_alt;
        modal.classList.add('open');
        setTimeout(() => {
          modal.classList.add('fade-in');
        }, 10);
      }
  
      function closeModal(): void {
        modal.classList.remove('fade-in');
        setTimeout(() => {
          modal.classList.remove('open');
        }, 300);
      }
  
      function nextImage(): void {
        currentIndex = (currentIndex + 1) % images.length;
        changeImage();
      }
  
      function prevImage(): void {
        currentIndex = (currentIndex - 1 + images.length) % images.length;
        changeImage();
      }
  
      function changeImage(): void {
        modalImg.classList.add('fade-out');
        setTimeout(() => {
          modalImg.src = images[currentIndex].src;
          modalImg.alt = images[currentIndex].img_alt;
          modalImg.classList.remove('fade-out');
          requestAnimationFrame(() => {
            modalImg.classList.add('fade-in');
            setTimeout(() => {
              modalImg.classList.remove('fade-in');
            }, 300);
          });
        }, 300);
      }
  
      function handleClickOutside(event: MouseEvent): void {
        const isInImage = (event.target === modalImg);
        const isInNavButtons = (event.target as HTMLElement).closest('.nav-btns') !== null;
  
        if (!isInImage && !isInNavButtons) {
          closeModal();
        }
      }
    });
  </script>